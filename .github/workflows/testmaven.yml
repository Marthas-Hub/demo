# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
name: Java CI with Maven

on:
  push:
    branches: [ master ]


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Print effective-settings (optional)
      run: mvn help:effective-settings
    
    - name: clean
      env:
        USERNAME: ${{ secrets.MULE_CLIENT_ID }}
        PASSWORD: ${{ secrets.Mule_Client_Secret }}
      run: mvn -U clean install  --settings ./conf/settings.xml -DClientID="$USERNAME" -DClientSecret="$PASSWORD"
   
    - name: Build with Maven
      env:
        USERNAME: ${{ secrets.MULE_CLIENT_ID }}
        PASSWORD: ${{ secrets.Mule_Client_Secret }}
      run: mvn -B package --file pom.xml  -DClientID="$USERNAME" -DClientSecret="$PASSWORD"
  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-mavven-${{ ('*.jar') }}
    - name: Deploy to cloudhub
      env:
        USERNAME: ${{ secrets.MULE_CLIENT_ID }}
        PASSWORD: ${{ secrets.Mule_Client_Secret }}
      run: mvn clean package deploy -DmuleDeploy -X --file pom.xml -DClientID="$USERNAME" -DClientSecret="$PASSWORD"