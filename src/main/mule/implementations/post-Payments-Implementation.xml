<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:core-banking-legacy="http://www.mulesoft.org/schema/mule/core-banking-legacy" xmlns:core-banking-legacy-corporate="http://www.mulesoft.org/schema/mule/core-banking-legacy-corporate"
	xmlns:accounts="http://www.mulesoft.org/schema/mule/accounts"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/accounts http://www.mulesoft.org/schema/mule/accounts/current/mule-accounts.xsd
http://www.mulesoft.org/schema/mule/core-banking-legacy-corporate http://www.mulesoft.org/schema/mule/core-banking-legacy-corporate/current/mule-core-banking-legacy-corporate.xsd
http://www.mulesoft.org/schema/mule/core-banking-legacy http://www.mulesoft.org/schema/mule/core-banking-legacy/current/mule-core-banking-legacy.xsd">
	<flow name="postPaymentsImplementationFlow" doc:id="8fe26480-1df2-463d-aec8-3a643d48f7e9" >
		<set-variable value="#[payload]" doc:name="Intellect-Banking-Payload" doc:id="09e8cdd2-5ec5-4b69-8e9e-15e0f011bef5" variableName="intellectPayload"/>
		<choice doc:name="Validating X-Channel-Aware" doc:id="f86599a3-5e22-4661-b820-01294b884a87" >
			<when expression="#[attributes.headers.'x-channel-aware' == &quot;CORPORATE&quot;]">
				<choice doc:name="Validating 'cif'" doc:id="38ce7324-2f73-4536-a5bc-f6a61533710d" >
					<when expression="#[!isEmpty(payload.customerId)]">
						<logger level="INFO" doc:name="Logger before accounts connector implementation" doc:id="ab611e78-4654-40c4-877b-af4500b32648" message="Logger before accounts connector implementation"/>
						<try doc:name="Try" doc:id="c4dfdbbd-a48c-43ab-a854-96bba8b7aba2" >
							<accounts:get-account-by-account-number doc:name="Get account by account number" doc:id="1408e181-b8ef-4913-aec8-72a2eb97d1d8" account-number="#[payload.accountNumber]" x-correlation-id="#[vars.correlationId]" config-ref="Accounts_Config" />
							<error-handler >
								<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="f8e0111c-9746-42ae-b151-a063226e3a26" >
									<raise-error doc:name="Raise error for ACCOUNT INVALID" doc:id="bd2c032a-f49f-4583-a813-24054f169c22" type="ACCOUNT:INVALID" description="invalid account" />
								</on-error-propagate>
							
</error-handler>
						</try>
						<logger level="INFO" doc:name="Logger after  accounts connector implementation" doc:id="f5d3628f-bcf8-483d-aa03-4f0369133a05" message="Logger after  accounts connector implementation"/>
						<ee:transform doc:name="Accounts response payload" doc:id="7a9a1f8d-eb6c-4203-aba3-e0511f46cd29">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<ee:transform doc:name="Request mapping payload for Core_Banking_Legacy_Corporate" doc:id="04ee6c4d-8cf1-4fe8-87d7-04a65df8ff98" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
  "fiAccountId": {
    "branch": payload.fiAccountId.branch,
    "category": payload.fiAccountId.category,
    "productType": payload.fiAccountId.productType,
    "productId": payload.fiAccountId.productId,
    "currency": payload.fiAccountId.currency
  },
  "vendor": {
    "id": vars.intellectPayload.vendor.id,
    "accountNumber": vars.intellectPayload.vendor.accountNumber
  },
  "amount": vars.intellectPayload.amount
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<logger level="INFO" doc:name="Logger before Core Banking Legacy Corporate connector implementation" doc:id="562949d5-109e-4ed0-95b5-fa174844f914" message="Logger before Core Banking Legacy Corporate connector implementation"/>
						<core-banking-legacy-corporate:create-payment-by-cif doc:name="Create payment by cif" doc:id="45e2645e-773d-4e99-8cac-e4cf755cace2" cif="#[vars.intellectPayload.customerId]" x-correlation-id="#[vars.correlationId]" config-ref="Core_Banking_Legacy_Corporate_Config"/>
						<logger level="INFO" doc:name="Logger after Core Banking Legacy Corporate connector implementation" doc:id="f7ddbc54-4636-4791-b356-814713e69004" message="Logger after Core Banking Legacy Corporate connector implementation"/>
						<choice doc:name="Validating 'bin'" doc:id="937cc165-68ca-4742-bf8a-bf8bf8363b25" >
							<when expression="#[!isEmpty(payload.fiAccountId.bin)]">
								<ee:transform doc:name="Response mapping payload" doc:id="e76a57e5-dbdb-4859-aa3a-28eb93399e76">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  "customerId": payload.cif,
  "accountNumber":vars.intellectPayload.accountNumber,
  "bin": payload.fiAccountId.bin,
  "vendor": {
    "id": payload.vendor.id,
    "accountNumber": payload.vendor.accountNumber
  },
  "amount": payload.amount,
  "confirmationNumber": payload.confirmationNumber
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
							</when>
							<otherwise >
								<raise-error doc:name="Raise error for INVALID BIN" doc:id="16830314-e243-496a-a212-de3e9f12e81a" type="INVALID:BIN" description='Unimplemented "BIN"'/>
							</otherwise>
						</choice>
					
</when>
					<otherwise >
						<raise-error doc:name="Raise error for customerId INVALID" doc:id="d76daac3-c1dc-4d5c-a323-8faa22e41ed9" type="CIF:INVALID" description="Customer_ID is null "/>
					</otherwise>
				</choice>
			</when>
			<otherwise >
				<choice doc:name="Validating registeredCustomerId" doc:id="4ec283cc-83ca-4fb4-9a84-688443b13cbb" >
					<when expression="#[!isEmpty(payload.vendor.registeredCustomerId)]">
						<logger level="INFO" doc:name="Logger before accounts connector implementation" doc:id="0f9eb719-a984-4f1f-b14b-ea8130716263" message="Logger before accounts connector implementation"/>
						<try doc:name="Try" doc:id="00151252-f7cd-4c16-9978-eb8810fe054d" >
							<accounts:get-account-by-account-number doc:name="Get account by account number" doc:id="8469ef28-c366-4865-8232-dc82d3935767" config-ref="Accounts_Config" account-number="#[payload.accountNumber]" x-correlation-id="#[vars.correlationId]" />
							<error-handler >
								<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="f0cbbf40-c16a-4c85-84db-777ab2194b70" >
									<raise-error doc:name="Raise error for ACCOUNT INVALID" doc:id="3d5f67e2-4ad6-409a-a594-46c1e30f652c" type="ACCOUNT:INVALID" description="invalid account" />
								</on-error-propagate>
							</error-handler>
						</try>
						<logger level="INFO" doc:name="Logger after accounts connector implementation" doc:id="32a6938e-c417-4b6d-8dc6-460400439e1f" message="Logger after accounts connector implementation"/>
						<ee:transform doc:name="Accounts response payload" doc:id="56890ebc-7e2d-47ce-8109-5e3afda5dbe1" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<ee:transform doc:name="Request mapping payload for Core_Banking_Legacy_" doc:id="672c0a77-3bc1-4515-b4e7-1aa18d81db32" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
  "fromAccountId": payload.accountId,
  "billPaymentPayeeId": vars.intellectPayload.vendor.registeredCustomerId ++ "-" ++ vars.intellectPayload.vendor.id ++ "-" ++ vars.intellectPayload.vendor.accountNumber,
  "amount": vars.intellectPayload.amount
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<logger level="INFO" doc:name="Logger before Core Banking Legacy connector implementation" doc:id="abbfe6c9-e542-4f7c-aef3-8e530b4a01e2" message="Logger before Core Banking Legacy connector implementation"/>
						<core-banking-legacy:create-immediate-bill-payment-by-customer-id doc:name="Create immediate bill payment by customer id" doc:id="fbfec57b-363b-4e14-a0b4-bdb2eddaf57a" customer-id="#[vars.intellectPayload.customerId]" config-ref="Core_Banking_Legacy_Config"/>
						<logger level="INFO" doc:name="Logger after Core Banking Legacy connector implementation" doc:id="caf2332a-84b4-4d5c-8792-95e86cbbaa05" message="Logger after Core Banking Legacy connector implementation"/>
						<ee:transform doc:name="Response mapping payload" doc:id="c5d411f4-5867-4767-8306-adabfb9a67e6" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
  "customerId": vars.intellectPayload.customerId,
  "accountNumber":vars.intellectPayload.accountNumber,
  // "bin": payload.fiAccountId.bin,
  "vendor": {
    "id": vars.intellectPayload.vendor.id,
    "accountNumber": vars.intellectPayload.vendor.accountNumber
  },
  "amount": vars.intellectPayload.amount,
  "confirmationNumber": payload.confirmationNumber
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						
					
</when>
					<otherwise >
						<raise-error doc:name="Raise error for RegisteredCustomerId INVALID" doc:id="c8650082-9827-4b3d-9073-b4126f354eca" type="RegisteredCustomerId:INVALID" description="registeredCustomerId is null " />
					</otherwise>
				</choice>
			</otherwise>
		</choice>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="0cb2b177-236e-4fcf-9c71-3eff742ae445" type="RegisteredCustomerId:INVALID,CIF:INVALID,ACCOUNT:INVALID">
				<ee:transform doc:name="Transform Message" doc:id="a812a089-5cf7-4102-8a89-57b4fe288c70" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
 "link": "",
 "additionalMessage": error.mulemessage.typedvalue.value,
 "timeStamp": now() as String {format: "yyyy-MM-dd'T'hh:mm:ss"},
 "responseCode": error.errorMessage.attributes.statusCode,
 "message": error.detailedDescription,
 "httpStatusCode": 400
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-continue>
			
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="ca8ce626-506f-49e3-8887-7916ff90aaa0" type="INVALID:BIN">
				<ee:transform doc:name="Transform Message" doc:id="a0a51800-053a-4d45-b976-4d3bb64729b8" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
 "link": "",
 "additionalMessage": error.mulemessage.typedvalue.value,
 "timeStamp": now() as String {format: "yyyy-MM-dd'T'hh:mm:ss"},
 "responseCode": error.errorMessage.attributes.statusCode,
 "message": error.detailedDescription,
 "httpStatusCode": 501
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-continue>
			
		</error-handler>
	</flow>
</mule>
